INCLUDE(CTest)
ENABLE_TESTING()

MACRO(UNITTEST prefix exec)
    SET(target ${prefix}-${exec})
    ADD_EXECUTABLE(${target} ${ARGN})
    SET_TARGET_PROPERTIES(${target} PROPERTIES OUTPUT_NAME ${exec})
    TARGET_LINK_LIBRARIES(${target} blitz)
    IF (WIN32)
        SET(TEST_PATH ${EXECUTABLE_OUTPUT_PATH})
    ELSE()
        SET(TEST_PATH ${CMAKE_CURRENT_BINARY_DIR})
    ENDIF()
    ADD_TEST(${exec} ${TEST_PATH}/${exec})
ENDMACRO()

MACRO(TESTS prefix)
    FOREACH(example ${ARGN})
        UNITTEST(${prefix} ${example} ${example}.cpp)
    ENDFOREACH()
ENDMACRO()

IF (USE_GCC AND BUILD_TESTING)
    OPTION(ENABLE_COVERAGE "Enable coverage" OFF)
    MARK_AS_ADVANCED(ENABLE_COVERAGE)
ENDIF()

IF (ENABLE_COVERAGE)
    IF (USE_GCC)
        SET(COVERAGE_FLAGS "-fprofile-arcs -ftest-coverage")
        SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${COVERAGE_FLAGS} -lgcov")
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${COVERAGE_FLAGS}")
        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${COVERAGE_FLAGS}")
    ELSE()
        MESSAGE(SEND_ERROR "Coverage is only available with gcc.")
    ENDIF()
ENDIF()
